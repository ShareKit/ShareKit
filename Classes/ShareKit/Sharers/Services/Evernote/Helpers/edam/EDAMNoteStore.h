/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"

#import "EDAMUserStore.h"
#import "EDAMTypes.h"
#import "EDAMErrors.h"
#import "EDAMLimits.h"

@interface EDAMSyncState : NSObject <NSCoding> {
  EDAMTimestamp __currentTime;
  EDAMTimestamp __fullSyncBefore;
  int32_t __updateCount;
  int64_t __uploaded;

  BOOL __currentTime_isset;
  BOOL __fullSyncBefore_isset;
  BOOL __updateCount_isset;
  BOOL __uploaded_isset;
}

- (id) initWithCurrentTime: (EDAMTimestamp) currentTime fullSyncBefore: (EDAMTimestamp) fullSyncBefore updateCount: (int32_t) updateCount uploaded: (int64_t) uploaded;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=currentTime, setter=setCurrentTime:) EDAMTimestamp currentTime;
@property (nonatomic, getter=fullSyncBefore, setter=setFullSyncBefore:) EDAMTimestamp fullSyncBefore;
@property (nonatomic, getter=updateCount, setter=setUpdateCount:) int32_t updateCount;
@property (nonatomic, getter=uploaded, setter=setUploaded:) int64_t uploaded;
#else

- (EDAMTimestamp) currentTime;
- (void) setCurrentTime: (EDAMTimestamp) currentTime;

- (EDAMTimestamp) fullSyncBefore;
- (void) setFullSyncBefore: (EDAMTimestamp) fullSyncBefore;

- (int32_t) updateCount;
- (void) setUpdateCount: (int32_t) updateCount;

- (int64_t) uploaded;
- (void) setUploaded: (int64_t) uploaded;

#endif

- (BOOL) currentTimeIsSet;
- (BOOL) fullSyncBeforeIsSet;
- (BOOL) updateCountIsSet;
- (BOOL) uploadedIsSet;
@end

@interface EDAMSyncChunk : NSObject <NSCoding> {
  EDAMTimestamp __currentTime;
  int32_t __chunkHighUSN;
  int32_t __updateCount;
  NSArray * __notes;
  NSArray * __notebooks;
  NSArray * __tags;
  NSArray * __searches;
  NSArray * __resources;
  NSArray * __expungedNotes;
  NSArray * __expungedNotebooks;
  NSArray * __expungedTags;
  NSArray * __expungedSearches;
  NSArray * __linkedNotebooks;
  NSArray * __expungedLinkedNotebooks;

  BOOL __currentTime_isset;
  BOOL __chunkHighUSN_isset;
  BOOL __updateCount_isset;
  BOOL __notes_isset;
  BOOL __notebooks_isset;
  BOOL __tags_isset;
  BOOL __searches_isset;
  BOOL __resources_isset;
  BOOL __expungedNotes_isset;
  BOOL __expungedNotebooks_isset;
  BOOL __expungedTags_isset;
  BOOL __expungedSearches_isset;
  BOOL __linkedNotebooks_isset;
  BOOL __expungedLinkedNotebooks_isset;
}

- (id) initWithCurrentTime: (EDAMTimestamp) currentTime chunkHighUSN: (int32_t) chunkHighUSN updateCount: (int32_t) updateCount notes: (NSArray *) notes notebooks: (NSArray *) notebooks tags: (NSArray *) tags searches: (NSArray *) searches resources: (NSArray *) resources expungedNotes: (NSArray *) expungedNotes expungedNotebooks: (NSArray *) expungedNotebooks expungedTags: (NSArray *) expungedTags expungedSearches: (NSArray *) expungedSearches linkedNotebooks: (NSArray *) linkedNotebooks expungedLinkedNotebooks: (NSArray *) expungedLinkedNotebooks;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=currentTime, setter=setCurrentTime:) EDAMTimestamp currentTime;
@property (nonatomic, getter=chunkHighUSN, setter=setChunkHighUSN:) int32_t chunkHighUSN;
@property (nonatomic, getter=updateCount, setter=setUpdateCount:) int32_t updateCount;
@property (nonatomic, retain, getter=notes, setter=setNotes:) NSArray * notes;
@property (nonatomic, retain, getter=notebooks, setter=setNotebooks:) NSArray * notebooks;
@property (nonatomic, retain, getter=tags, setter=setTags:) NSArray * tags;
@property (nonatomic, retain, getter=searches, setter=setSearches:) NSArray * searches;
@property (nonatomic, retain, getter=resources, setter=setResources:) NSArray * resources;
@property (nonatomic, retain, getter=expungedNotes, setter=setExpungedNotes:) NSArray * expungedNotes;
@property (nonatomic, retain, getter=expungedNotebooks, setter=setExpungedNotebooks:) NSArray * expungedNotebooks;
@property (nonatomic, retain, getter=expungedTags, setter=setExpungedTags:) NSArray * expungedTags;
@property (nonatomic, retain, getter=expungedSearches, setter=setExpungedSearches:) NSArray * expungedSearches;
@property (nonatomic, retain, getter=linkedNotebooks, setter=setLinkedNotebooks:) NSArray * linkedNotebooks;
@property (nonatomic, retain, getter=expungedLinkedNotebooks, setter=setExpungedLinkedNotebooks:) NSArray * expungedLinkedNotebooks;
#else

- (EDAMTimestamp) currentTime;
- (void) setCurrentTime: (EDAMTimestamp) currentTime;

- (int32_t) chunkHighUSN;
- (void) setChunkHighUSN: (int32_t) chunkHighUSN;

- (int32_t) updateCount;
- (void) setUpdateCount: (int32_t) updateCount;

- (NSArray *) notes;
- (void) setNotes: (NSArray *) notes;

- (NSArray *) notebooks;
- (void) setNotebooks: (NSArray *) notebooks;

- (NSArray *) tags;
- (void) setTags: (NSArray *) tags;

- (NSArray *) searches;
- (void) setSearches: (NSArray *) searches;

- (NSArray *) resources;
- (void) setResources: (NSArray *) resources;

- (NSArray *) expungedNotes;
- (void) setExpungedNotes: (NSArray *) expungedNotes;

- (NSArray *) expungedNotebooks;
- (void) setExpungedNotebooks: (NSArray *) expungedNotebooks;

- (NSArray *) expungedTags;
- (void) setExpungedTags: (NSArray *) expungedTags;

- (NSArray *) expungedSearches;
- (void) setExpungedSearches: (NSArray *) expungedSearches;

- (NSArray *) linkedNotebooks;
- (void) setLinkedNotebooks: (NSArray *) linkedNotebooks;

- (NSArray *) expungedLinkedNotebooks;
- (void) setExpungedLinkedNotebooks: (NSArray *) expungedLinkedNotebooks;

#endif

- (BOOL) currentTimeIsSet;
- (BOOL) chunkHighUSNIsSet;
- (BOOL) updateCountIsSet;
- (BOOL) notesIsSet;
- (BOOL) notebooksIsSet;
- (BOOL) tagsIsSet;
- (BOOL) searchesIsSet;
- (BOOL) resourcesIsSet;
- (BOOL) expungedNotesIsSet;
- (BOOL) expungedNotebooksIsSet;
- (BOOL) expungedTagsIsSet;
- (BOOL) expungedSearchesIsSet;
- (BOOL) linkedNotebooksIsSet;
- (BOOL) expungedLinkedNotebooksIsSet;
@end

@interface EDAMSyncChunkFilter : NSObject <NSCoding> {
  BOOL __includeNotes;
  BOOL __includeNoteResources;
  BOOL __includeNoteAttributes;
  BOOL __includeNotebooks;
  BOOL __includeTags;
  BOOL __includeSearches;
  BOOL __includeResources;
  BOOL __includeLinkedNotebooks;
  BOOL __includeExpunged;
  BOOL __includeNoteApplicationDataFullMap;
  BOOL __includeResourceApplicationDataFullMap;
  BOOL __includeNoteResourceApplicationDataFullMap;
  NSString * __requireNoteContentClass;

  BOOL __includeNotes_isset;
  BOOL __includeNoteResources_isset;
  BOOL __includeNoteAttributes_isset;
  BOOL __includeNotebooks_isset;
  BOOL __includeTags_isset;
  BOOL __includeSearches_isset;
  BOOL __includeResources_isset;
  BOOL __includeLinkedNotebooks_isset;
  BOOL __includeExpunged_isset;
  BOOL __includeNoteApplicationDataFullMap_isset;
  BOOL __includeResourceApplicationDataFullMap_isset;
  BOOL __includeNoteResourceApplicationDataFullMap_isset;
  BOOL __requireNoteContentClass_isset;
}

- (id) initWithIncludeNotes: (BOOL) includeNotes includeNoteResources: (BOOL) includeNoteResources includeNoteAttributes: (BOOL) includeNoteAttributes includeNotebooks: (BOOL) includeNotebooks includeTags: (BOOL) includeTags includeSearches: (BOOL) includeSearches includeResources: (BOOL) includeResources includeLinkedNotebooks: (BOOL) includeLinkedNotebooks includeExpunged: (BOOL) includeExpunged includeNoteApplicationDataFullMap: (BOOL) includeNoteApplicationDataFullMap includeResourceApplicationDataFullMap: (BOOL) includeResourceApplicationDataFullMap includeNoteResourceApplicationDataFullMap: (BOOL) includeNoteResourceApplicationDataFullMap requireNoteContentClass: (NSString *) requireNoteContentClass;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=includeNotes, setter=setIncludeNotes:) BOOL includeNotes;
@property (nonatomic, getter=includeNoteResources, setter=setIncludeNoteResources:) BOOL includeNoteResources;
@property (nonatomic, getter=includeNoteAttributes, setter=setIncludeNoteAttributes:) BOOL includeNoteAttributes;
@property (nonatomic, getter=includeNotebooks, setter=setIncludeNotebooks:) BOOL includeNotebooks;
@property (nonatomic, getter=includeTags, setter=setIncludeTags:) BOOL includeTags;
@property (nonatomic, getter=includeSearches, setter=setIncludeSearches:) BOOL includeSearches;
@property (nonatomic, getter=includeResources, setter=setIncludeResources:) BOOL includeResources;
@property (nonatomic, getter=includeLinkedNotebooks, setter=setIncludeLinkedNotebooks:) BOOL includeLinkedNotebooks;
@property (nonatomic, getter=includeExpunged, setter=setIncludeExpunged:) BOOL includeExpunged;
@property (nonatomic, getter=includeNoteApplicationDataFullMap, setter=setIncludeNoteApplicationDataFullMap:) BOOL includeNoteApplicationDataFullMap;
@property (nonatomic, getter=includeResourceApplicationDataFullMap, setter=setIncludeResourceApplicationDataFullMap:) BOOL includeResourceApplicationDataFullMap;
@property (nonatomic, getter=includeNoteResourceApplicationDataFullMap, setter=setIncludeNoteResourceApplicationDataFullMap:) BOOL includeNoteResourceApplicationDataFullMap;
@property (nonatomic, retain, getter=requireNoteContentClass, setter=setRequireNoteContentClass:) NSString * requireNoteContentClass;
#else

- (BOOL) includeNotes;
- (void) setIncludeNotes: (BOOL) includeNotes;

- (BOOL) includeNoteResources;
- (void) setIncludeNoteResources: (BOOL) includeNoteResources;

- (BOOL) includeNoteAttributes;
- (void) setIncludeNoteAttributes: (BOOL) includeNoteAttributes;

- (BOOL) includeNotebooks;
- (void) setIncludeNotebooks: (BOOL) includeNotebooks;

- (BOOL) includeTags;
- (void) setIncludeTags: (BOOL) includeTags;

- (BOOL) includeSearches;
- (void) setIncludeSearches: (BOOL) includeSearches;

- (BOOL) includeResources;
- (void) setIncludeResources: (BOOL) includeResources;

- (BOOL) includeLinkedNotebooks;
- (void) setIncludeLinkedNotebooks: (BOOL) includeLinkedNotebooks;

- (BOOL) includeExpunged;
- (void) setIncludeExpunged: (BOOL) includeExpunged;

- (BOOL) includeNoteApplicationDataFullMap;
- (void) setIncludeNoteApplicationDataFullMap: (BOOL) includeNoteApplicationDataFullMap;

- (BOOL) includeResourceApplicationDataFullMap;
- (void) setIncludeResourceApplicationDataFullMap: (BOOL) includeResourceApplicationDataFullMap;

- (BOOL) includeNoteResourceApplicationDataFullMap;
- (void) setIncludeNoteResourceApplicationDataFullMap: (BOOL) includeNoteResourceApplicationDataFullMap;

- (NSString *) requireNoteContentClass;
- (void) setRequireNoteContentClass: (NSString *) requireNoteContentClass;

#endif

- (BOOL) includeNotesIsSet;
- (BOOL) includeNoteResourcesIsSet;
- (BOOL) includeNoteAttributesIsSet;
- (BOOL) includeNotebooksIsSet;
- (BOOL) includeTagsIsSet;
- (BOOL) includeSearchesIsSet;
- (BOOL) includeResourcesIsSet;
- (BOOL) includeLinkedNotebooksIsSet;
- (BOOL) includeExpungedIsSet;
- (BOOL) includeNoteApplicationDataFullMapIsSet;
- (BOOL) includeResourceApplicationDataFullMapIsSet;
- (BOOL) includeNoteResourceApplicationDataFullMapIsSet;
- (BOOL) requireNoteContentClassIsSet;
@end

@interface EDAMNoteFilter : NSObject <NSCoding> {
  int32_t __order;
  BOOL __ascending;
  NSString * __words;
  EDAMGuid __notebookGuid;
  NSArray * __tagGuids;
  NSString * __timeZone;
  BOOL __inactive;

  BOOL __order_isset;
  BOOL __ascending_isset;
  BOOL __words_isset;
  BOOL __notebookGuid_isset;
  BOOL __tagGuids_isset;
  BOOL __timeZone_isset;
  BOOL __inactive_isset;
}

- (id) initWithOrder: (int32_t) order ascending: (BOOL) ascending words: (NSString *) words notebookGuid: (EDAMGuid) notebookGuid tagGuids: (NSArray *) tagGuids timeZone: (NSString *) timeZone inactive: (BOOL) inactive;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=order, setter=setOrder:) int32_t order;
@property (nonatomic, getter=ascending, setter=setAscending:) BOOL ascending;
@property (nonatomic, retain, getter=words, setter=setWords:) NSString * words;
@property (nonatomic, retain, getter=notebookGuid, setter=setNotebookGuid:) EDAMGuid notebookGuid;
@property (nonatomic, retain, getter=tagGuids, setter=setTagGuids:) NSArray * tagGuids;
@property (nonatomic, retain, getter=timeZone, setter=setTimeZone:) NSString * timeZone;
@property (nonatomic, getter=inactive, setter=setInactive:) BOOL inactive;
#else

- (int32_t) order;
- (void) setOrder: (int32_t) order;

- (BOOL) ascending;
- (void) setAscending: (BOOL) ascending;

- (NSString *) words;
- (void) setWords: (NSString *) words;

- (EDAMGuid) notebookGuid;
- (void) setNotebookGuid: (EDAMGuid) notebookGuid;

- (NSArray *) tagGuids;
- (void) setTagGuids: (NSArray *) tagGuids;

- (NSString *) timeZone;
- (void) setTimeZone: (NSString *) timeZone;

- (BOOL) inactive;
- (void) setInactive: (BOOL) inactive;

#endif

- (BOOL) orderIsSet;
- (BOOL) ascendingIsSet;
- (BOOL) wordsIsSet;
- (BOOL) notebookGuidIsSet;
- (BOOL) tagGuidsIsSet;
- (BOOL) timeZoneIsSet;
- (BOOL) inactiveIsSet;
@end

@interface EDAMNoteList : NSObject <NSCoding> {
  int32_t __startIndex;
  int32_t __totalNotes;
  NSArray * __notes;
  NSArray * __stoppedWords;
  NSArray * __searchedWords;
  int32_t __updateCount;

  BOOL __startIndex_isset;
  BOOL __totalNotes_isset;
  BOOL __notes_isset;
  BOOL __stoppedWords_isset;
  BOOL __searchedWords_isset;
  BOOL __updateCount_isset;
}

- (id) initWithStartIndex: (int32_t) startIndex totalNotes: (int32_t) totalNotes notes: (NSArray *) notes stoppedWords: (NSArray *) stoppedWords searchedWords: (NSArray *) searchedWords updateCount: (int32_t) updateCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=startIndex, setter=setStartIndex:) int32_t startIndex;
@property (nonatomic, getter=totalNotes, setter=setTotalNotes:) int32_t totalNotes;
@property (nonatomic, retain, getter=notes, setter=setNotes:) NSArray * notes;
@property (nonatomic, retain, getter=stoppedWords, setter=setStoppedWords:) NSArray * stoppedWords;
@property (nonatomic, retain, getter=searchedWords, setter=setSearchedWords:) NSArray * searchedWords;
@property (nonatomic, getter=updateCount, setter=setUpdateCount:) int32_t updateCount;
#else

- (int32_t) startIndex;
- (void) setStartIndex: (int32_t) startIndex;

- (int32_t) totalNotes;
- (void) setTotalNotes: (int32_t) totalNotes;

- (NSArray *) notes;
- (void) setNotes: (NSArray *) notes;

- (NSArray *) stoppedWords;
- (void) setStoppedWords: (NSArray *) stoppedWords;

- (NSArray *) searchedWords;
- (void) setSearchedWords: (NSArray *) searchedWords;

- (int32_t) updateCount;
- (void) setUpdateCount: (int32_t) updateCount;

#endif

- (BOOL) startIndexIsSet;
- (BOOL) totalNotesIsSet;
- (BOOL) notesIsSet;
- (BOOL) stoppedWordsIsSet;
- (BOOL) searchedWordsIsSet;
- (BOOL) updateCountIsSet;
@end

@interface EDAMNoteMetadata : NSObject <NSCoding> {
  EDAMGuid __guid;
  NSString * __title;
  int32_t __contentLength;
  EDAMTimestamp __created;
  EDAMTimestamp __updated;
  int32_t __updateSequenceNum;
  NSString * __notebookGuid;
  NSArray * __tagGuids;
  EDAMNoteAttributes * __attributes;
  NSString * __largestResourceMime;
  int32_t __largestResourceSize;

  BOOL __guid_isset;
  BOOL __title_isset;
  BOOL __contentLength_isset;
  BOOL __created_isset;
  BOOL __updated_isset;
  BOOL __updateSequenceNum_isset;
  BOOL __notebookGuid_isset;
  BOOL __tagGuids_isset;
  BOOL __attributes_isset;
  BOOL __largestResourceMime_isset;
  BOOL __largestResourceSize_isset;
}

- (id) initWithGuid: (EDAMGuid) guid title: (NSString *) title contentLength: (int32_t) contentLength created: (EDAMTimestamp) created updated: (EDAMTimestamp) updated updateSequenceNum: (int32_t) updateSequenceNum notebookGuid: (NSString *) notebookGuid tagGuids: (NSArray *) tagGuids attributes: (EDAMNoteAttributes *) attributes largestResourceMime: (NSString *) largestResourceMime largestResourceSize: (int32_t) largestResourceSize;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=guid, setter=setGuid:) EDAMGuid guid;
@property (nonatomic, retain, getter=title, setter=setTitle:) NSString * title;
@property (nonatomic, getter=contentLength, setter=setContentLength:) int32_t contentLength;
@property (nonatomic, getter=created, setter=setCreated:) EDAMTimestamp created;
@property (nonatomic, getter=updated, setter=setUpdated:) EDAMTimestamp updated;
@property (nonatomic, getter=updateSequenceNum, setter=setUpdateSequenceNum:) int32_t updateSequenceNum;
@property (nonatomic, retain, getter=notebookGuid, setter=setNotebookGuid:) NSString * notebookGuid;
@property (nonatomic, retain, getter=tagGuids, setter=setTagGuids:) NSArray * tagGuids;
@property (nonatomic, retain, getter=attributes, setter=setAttributes:) EDAMNoteAttributes * attributes;
@property (nonatomic, retain, getter=largestResourceMime, setter=setLargestResourceMime:) NSString * largestResourceMime;
@property (nonatomic, getter=largestResourceSize, setter=setLargestResourceSize:) int32_t largestResourceSize;
#else

- (EDAMGuid) guid;
- (void) setGuid: (EDAMGuid) guid;

- (NSString *) title;
- (void) setTitle: (NSString *) title;

- (int32_t) contentLength;
- (void) setContentLength: (int32_t) contentLength;

- (EDAMTimestamp) created;
- (void) setCreated: (EDAMTimestamp) created;

- (EDAMTimestamp) updated;
- (void) setUpdated: (EDAMTimestamp) updated;

- (int32_t) updateSequenceNum;
- (void) setUpdateSequenceNum: (int32_t) updateSequenceNum;

- (NSString *) notebookGuid;
- (void) setNotebookGuid: (NSString *) notebookGuid;

- (NSArray *) tagGuids;
- (void) setTagGuids: (NSArray *) tagGuids;

- (EDAMNoteAttributes *) attributes;
- (void) setAttributes: (EDAMNoteAttributes *) attributes;

- (NSString *) largestResourceMime;
- (void) setLargestResourceMime: (NSString *) largestResourceMime;

- (int32_t) largestResourceSize;
- (void) setLargestResourceSize: (int32_t) largestResourceSize;

#endif

- (BOOL) guidIsSet;
- (BOOL) titleIsSet;
- (BOOL) contentLengthIsSet;
- (BOOL) createdIsSet;
- (BOOL) updatedIsSet;
- (BOOL) updateSequenceNumIsSet;
- (BOOL) notebookGuidIsSet;
- (BOOL) tagGuidsIsSet;
- (BOOL) attributesIsSet;
- (BOOL) largestResourceMimeIsSet;
- (BOOL) largestResourceSizeIsSet;
@end

@interface EDAMNotesMetadataList : NSObject <NSCoding> {
  int32_t __startIndex;
  int32_t __totalNotes;
  NSArray * __notes;
  NSArray * __stoppedWords;
  NSArray * __searchedWords;
  int32_t __updateCount;

  BOOL __startIndex_isset;
  BOOL __totalNotes_isset;
  BOOL __notes_isset;
  BOOL __stoppedWords_isset;
  BOOL __searchedWords_isset;
  BOOL __updateCount_isset;
}

- (id) initWithStartIndex: (int32_t) startIndex totalNotes: (int32_t) totalNotes notes: (NSArray *) notes stoppedWords: (NSArray *) stoppedWords searchedWords: (NSArray *) searchedWords updateCount: (int32_t) updateCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=startIndex, setter=setStartIndex:) int32_t startIndex;
@property (nonatomic, getter=totalNotes, setter=setTotalNotes:) int32_t totalNotes;
@property (nonatomic, retain, getter=notes, setter=setNotes:) NSArray * notes;
@property (nonatomic, retain, getter=stoppedWords, setter=setStoppedWords:) NSArray * stoppedWords;
@property (nonatomic, retain, getter=searchedWords, setter=setSearchedWords:) NSArray * searchedWords;
@property (nonatomic, getter=updateCount, setter=setUpdateCount:) int32_t updateCount;
#else

- (int32_t) startIndex;
- (void) setStartIndex: (int32_t) startIndex;

- (int32_t) totalNotes;
- (void) setTotalNotes: (int32_t) totalNotes;

- (NSArray *) notes;
- (void) setNotes: (NSArray *) notes;

- (NSArray *) stoppedWords;
- (void) setStoppedWords: (NSArray *) stoppedWords;

- (NSArray *) searchedWords;
- (void) setSearchedWords: (NSArray *) searchedWords;

- (int32_t) updateCount;
- (void) setUpdateCount: (int32_t) updateCount;

#endif

- (BOOL) startIndexIsSet;
- (BOOL) totalNotesIsSet;
- (BOOL) notesIsSet;
- (BOOL) stoppedWordsIsSet;
- (BOOL) searchedWordsIsSet;
- (BOOL) updateCountIsSet;
@end

@interface EDAMNotesMetadataResultSpec : NSObject <NSCoding> {
  BOOL __includeTitle;
  BOOL __includeContentLength;
  BOOL __includeCreated;
  BOOL __includeUpdated;
  BOOL __includeUpdateSequenceNum;
  BOOL __includeNotebookGuid;
  BOOL __includeTagGuids;
  BOOL __includeAttributes;
  BOOL __includeLargestResourceMime;
  BOOL __includeLargestResourceSize;

  BOOL __includeTitle_isset;
  BOOL __includeContentLength_isset;
  BOOL __includeCreated_isset;
  BOOL __includeUpdated_isset;
  BOOL __includeUpdateSequenceNum_isset;
  BOOL __includeNotebookGuid_isset;
  BOOL __includeTagGuids_isset;
  BOOL __includeAttributes_isset;
  BOOL __includeLargestResourceMime_isset;
  BOOL __includeLargestResourceSize_isset;
}

- (id) initWithIncludeTitle: (BOOL) includeTitle includeContentLength: (BOOL) includeContentLength includeCreated: (BOOL) includeCreated includeUpdated: (BOOL) includeUpdated includeUpdateSequenceNum: (BOOL) includeUpdateSequenceNum includeNotebookGuid: (BOOL) includeNotebookGuid includeTagGuids: (BOOL) includeTagGuids includeAttributes: (BOOL) includeAttributes includeLargestResourceMime: (BOOL) includeLargestResourceMime includeLargestResourceSize: (BOOL) includeLargestResourceSize;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=includeTitle, setter=setIncludeTitle:) BOOL includeTitle;
@property (nonatomic, getter=includeContentLength, setter=setIncludeContentLength:) BOOL includeContentLength;
@property (nonatomic, getter=includeCreated, setter=setIncludeCreated:) BOOL includeCreated;
@property (nonatomic, getter=includeUpdated, setter=setIncludeUpdated:) BOOL includeUpdated;
@property (nonatomic, getter=includeUpdateSequenceNum, setter=setIncludeUpdateSequenceNum:) BOOL includeUpdateSequenceNum;
@property (nonatomic, getter=includeNotebookGuid, setter=setIncludeNotebookGuid:) BOOL includeNotebookGuid;
@property (nonatomic, getter=includeTagGuids, setter=setIncludeTagGuids:) BOOL includeTagGuids;
@property (nonatomic, getter=includeAttributes, setter=setIncludeAttributes:) BOOL includeAttributes;
@property (nonatomic, getter=includeLargestResourceMime, setter=setIncludeLargestResourceMime:) BOOL includeLargestResourceMime;
@property (nonatomic, getter=includeLargestResourceSize, setter=setIncludeLargestResourceSize:) BOOL includeLargestResourceSize;
#else

- (BOOL) includeTitle;
- (void) setIncludeTitle: (BOOL) includeTitle;

- (BOOL) includeContentLength;
- (void) setIncludeContentLength: (BOOL) includeContentLength;

- (BOOL) includeCreated;
- (void) setIncludeCreated: (BOOL) includeCreated;

- (BOOL) includeUpdated;
- (void) setIncludeUpdated: (BOOL) includeUpdated;

- (BOOL) includeUpdateSequenceNum;
- (void) setIncludeUpdateSequenceNum: (BOOL) includeUpdateSequenceNum;

- (BOOL) includeNotebookGuid;
- (void) setIncludeNotebookGuid: (BOOL) includeNotebookGuid;

- (BOOL) includeTagGuids;
- (void) setIncludeTagGuids: (BOOL) includeTagGuids;

- (BOOL) includeAttributes;
- (void) setIncludeAttributes: (BOOL) includeAttributes;

- (BOOL) includeLargestResourceMime;
- (void) setIncludeLargestResourceMime: (BOOL) includeLargestResourceMime;

- (BOOL) includeLargestResourceSize;
- (void) setIncludeLargestResourceSize: (BOOL) includeLargestResourceSize;

#endif

- (BOOL) includeTitleIsSet;
- (BOOL) includeContentLengthIsSet;
- (BOOL) includeCreatedIsSet;
- (BOOL) includeUpdatedIsSet;
- (BOOL) includeUpdateSequenceNumIsSet;
- (BOOL) includeNotebookGuidIsSet;
- (BOOL) includeTagGuidsIsSet;
- (BOOL) includeAttributesIsSet;
- (BOOL) includeLargestResourceMimeIsSet;
- (BOOL) includeLargestResourceSizeIsSet;
@end

@interface EDAMNoteCollectionCounts : NSObject <NSCoding> {
  NSDictionary * __notebookCounts;
  NSDictionary * __tagCounts;
  int32_t __trashCount;

  BOOL __notebookCounts_isset;
  BOOL __tagCounts_isset;
  BOOL __trashCount_isset;
}

- (id) initWithNotebookCounts: (NSDictionary *) notebookCounts tagCounts: (NSDictionary *) tagCounts trashCount: (int32_t) trashCount;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=notebookCounts, setter=setNotebookCounts:) NSDictionary * notebookCounts;
@property (nonatomic, retain, getter=tagCounts, setter=setTagCounts:) NSDictionary * tagCounts;
@property (nonatomic, getter=trashCount, setter=setTrashCount:) int32_t trashCount;
#else

- (NSDictionary *) notebookCounts;
- (void) setNotebookCounts: (NSDictionary *) notebookCounts;

- (NSDictionary *) tagCounts;
- (void) setTagCounts: (NSDictionary *) tagCounts;

- (int32_t) trashCount;
- (void) setTrashCount: (int32_t) trashCount;

#endif

- (BOOL) notebookCountsIsSet;
- (BOOL) tagCountsIsSet;
- (BOOL) trashCountIsSet;
@end

@interface EDAMAdImpressions : NSObject <NSCoding> {
  int32_t __adId;
  int32_t __impressionCount;
  int32_t __impressionTime;

  BOOL __adId_isset;
  BOOL __impressionCount_isset;
  BOOL __impressionTime_isset;
}

- (id) initWithAdId: (int32_t) adId impressionCount: (int32_t) impressionCount impressionTime: (int32_t) impressionTime;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=adId, setter=setAdId:) int32_t adId;
@property (nonatomic, getter=impressionCount, setter=setImpressionCount:) int32_t impressionCount;
@property (nonatomic, getter=impressionTime, setter=setImpressionTime:) int32_t impressionTime;
#else

- (int32_t) adId;
- (void) setAdId: (int32_t) adId;

- (int32_t) impressionCount;
- (void) setImpressionCount: (int32_t) impressionCount;

- (int32_t) impressionTime;
- (void) setImpressionTime: (int32_t) impressionTime;

#endif

- (BOOL) adIdIsSet;
- (BOOL) impressionCountIsSet;
- (BOOL) impressionTimeIsSet;
@end

@interface EDAMAdParameters : NSObject <NSCoding> {
  NSString * __clientLanguage;
  NSArray * __impressions;
  BOOL __supportHtml;
  NSDictionary * __clientProperties;

  BOOL __clientLanguage_isset;
  BOOL __impressions_isset;
  BOOL __supportHtml_isset;
  BOOL __clientProperties_isset;
}

- (id) initWithClientLanguage: (NSString *) clientLanguage impressions: (NSArray *) impressions supportHtml: (BOOL) supportHtml clientProperties: (NSDictionary *) clientProperties;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=clientLanguage, setter=setClientLanguage:) NSString * clientLanguage;
@property (nonatomic, retain, getter=impressions, setter=setImpressions:) NSArray * impressions;
@property (nonatomic, getter=supportHtml, setter=setSupportHtml:) BOOL supportHtml;
@property (nonatomic, retain, getter=clientProperties, setter=setClientProperties:) NSDictionary * clientProperties;
#else

- (NSString *) clientLanguage;
- (void) setClientLanguage: (NSString *) clientLanguage;

- (NSArray *) impressions;
- (void) setImpressions: (NSArray *) impressions;

- (BOOL) supportHtml;
- (void) setSupportHtml: (BOOL) supportHtml;

- (NSDictionary *) clientProperties;
- (void) setClientProperties: (NSDictionary *) clientProperties;

#endif

- (BOOL) clientLanguageIsSet;
- (BOOL) impressionsIsSet;
- (BOOL) supportHtmlIsSet;
- (BOOL) clientPropertiesIsSet;
@end

@interface EDAMNoteEmailParameters : NSObject <NSCoding> {
  NSString * __guid;
  EDAMNote * __note;
  NSArray * __toAddresses;
  NSArray * __ccAddresses;
  NSString * __subject;
  NSString * __message;

  BOOL __guid_isset;
  BOOL __note_isset;
  BOOL __toAddresses_isset;
  BOOL __ccAddresses_isset;
  BOOL __subject_isset;
  BOOL __message_isset;
}

- (id) initWithGuid: (NSString *) guid note: (EDAMNote *) note toAddresses: (NSArray *) toAddresses ccAddresses: (NSArray *) ccAddresses subject: (NSString *) subject message: (NSString *) message;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=guid, setter=setGuid:) NSString * guid;
@property (nonatomic, retain, getter=note, setter=setNote:) EDAMNote * note;
@property (nonatomic, retain, getter=toAddresses, setter=setToAddresses:) NSArray * toAddresses;
@property (nonatomic, retain, getter=ccAddresses, setter=setCcAddresses:) NSArray * ccAddresses;
@property (nonatomic, retain, getter=subject, setter=setSubject:) NSString * subject;
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
#else

- (NSString *) guid;
- (void) setGuid: (NSString *) guid;

- (EDAMNote *) note;
- (void) setNote: (EDAMNote *) note;

- (NSArray *) toAddresses;
- (void) setToAddresses: (NSArray *) toAddresses;

- (NSArray *) ccAddresses;
- (void) setCcAddresses: (NSArray *) ccAddresses;

- (NSString *) subject;
- (void) setSubject: (NSString *) subject;

- (NSString *) message;
- (void) setMessage: (NSString *) message;

#endif

- (BOOL) guidIsSet;
- (BOOL) noteIsSet;
- (BOOL) toAddressesIsSet;
- (BOOL) ccAddressesIsSet;
- (BOOL) subjectIsSet;
- (BOOL) messageIsSet;
@end

@interface EDAMNoteVersionId : NSObject <NSCoding> {
  int32_t __updateSequenceNum;
  EDAMTimestamp __updated;
  EDAMTimestamp __saved;
  NSString * __title;

  BOOL __updateSequenceNum_isset;
  BOOL __updated_isset;
  BOOL __saved_isset;
  BOOL __title_isset;
}

- (id) initWithUpdateSequenceNum: (int32_t) updateSequenceNum updated: (EDAMTimestamp) updated saved: (EDAMTimestamp) saved title: (NSString *) title;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=updateSequenceNum, setter=setUpdateSequenceNum:) int32_t updateSequenceNum;
@property (nonatomic, getter=updated, setter=setUpdated:) EDAMTimestamp updated;
@property (nonatomic, getter=saved, setter=setSaved:) EDAMTimestamp saved;
@property (nonatomic, retain, getter=title, setter=setTitle:) NSString * title;
#else

- (int32_t) updateSequenceNum;
- (void) setUpdateSequenceNum: (int32_t) updateSequenceNum;

- (EDAMTimestamp) updated;
- (void) setUpdated: (EDAMTimestamp) updated;

- (EDAMTimestamp) saved;
- (void) setSaved: (EDAMTimestamp) saved;

- (NSString *) title;
- (void) setTitle: (NSString *) title;

#endif

- (BOOL) updateSequenceNumIsSet;
- (BOOL) updatedIsSet;
- (BOOL) savedIsSet;
- (BOOL) titleIsSet;
@end

@protocol EDAMNoteStore <NSObject>
- (EDAMSyncState *) getSyncState: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMSyncChunk *) getSyncChunk: (NSString *) authenticationToken : (int32_t) afterUSN : (int32_t) maxEntries : (BOOL) fullSyncOnly;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMSyncChunk *) getFilteredSyncChunk: (NSString *) authenticationToken : (int32_t) afterUSN : (int32_t) maxEntries : (EDAMSyncChunkFilter *) filter;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMSyncState *) getLinkedNotebookSyncState: (NSString *) authenticationToken : (EDAMLinkedNotebook *) linkedNotebook;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMSyncChunk *) getLinkedNotebookSyncChunk: (NSString *) authenticationToken : (EDAMLinkedNotebook *) linkedNotebook : (int32_t) afterUSN : (int32_t) maxEntries : (BOOL) fullSyncOnly;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSArray *) listNotebooks: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMNotebook *) getNotebook: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNotebook *) getDefaultNotebook: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMNotebook *) createNotebook: (NSString *) authenticationToken : (EDAMNotebook *) notebook;  // throws EDAMUserException *, EDAMSystemException *, TException
- (int32_t) updateNotebook: (NSString *) authenticationToken : (EDAMNotebook *) notebook;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeNotebook: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSArray *) listTags: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (NSArray *) listTagsByNotebook: (NSString *) authenticationToken : (EDAMGuid) notebookGuid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMTag *) getTag: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMTag *) createTag: (NSString *) authenticationToken : (EDAMTag *) tag;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) updateTag: (NSString *) authenticationToken : (EDAMTag *) tag;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (void) untagAll: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeTag: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSArray *) listSearches: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMSavedSearch *) getSearch: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMSavedSearch *) createSearch: (NSString *) authenticationToken : (EDAMSavedSearch *) search;  // throws EDAMUserException *, EDAMSystemException *, TException
- (int32_t) updateSearch: (NSString *) authenticationToken : (EDAMSavedSearch *) search;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeSearch: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNoteList *) findNotes: (NSString *) authenticationToken : (EDAMNoteFilter *) filter : (int32_t) offset : (int32_t) maxNotes;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) findNoteOffset: (NSString *) authenticationToken : (EDAMNoteFilter *) filter : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNotesMetadataList *) findNotesMetadata: (NSString *) authenticationToken : (EDAMNoteFilter *) filter : (int32_t) offset : (int32_t) maxNotes : (EDAMNotesMetadataResultSpec *) resultSpec;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNoteCollectionCounts *) findNoteCounts: (NSString *) authenticationToken : (EDAMNoteFilter *) filter : (BOOL) withTrash;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNote *) getNote: (NSString *) authenticationToken : (EDAMGuid) guid : (BOOL) withContent : (BOOL) withResourcesData : (BOOL) withResourcesRecognition : (BOOL) withResourcesAlternateData;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMLazyMap *) getNoteApplicationData: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSString *) getNoteApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) setNoteApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key : (NSString *) value;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) unsetNoteApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSString *) getNoteContent: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSString *) getNoteSearchText: (NSString *) authenticationToken : (EDAMGuid) guid : (BOOL) noteOnly : (BOOL) tokenizeForIndexing;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSString *) getResourceSearchText: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSArray *) getNoteTagNames: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNote *) createNote: (NSString *) authenticationToken : (EDAMNote *) note;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNote *) updateNote: (NSString *) authenticationToken : (EDAMNote *) note;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) deleteNote: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeNote: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeNotes: (NSString *) authenticationToken : (NSArray *) noteGuids;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) expungeInactiveNotes: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMNote *) copyNote: (NSString *) authenticationToken : (EDAMGuid) noteGuid : (EDAMGuid) toNotebookGuid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSArray *) listNoteVersions: (NSString *) authenticationToken : (EDAMGuid) noteGuid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMNote *) getNoteVersion: (NSString *) authenticationToken : (EDAMGuid) noteGuid : (int32_t) updateSequenceNum : (BOOL) withResourcesData : (BOOL) withResourcesRecognition : (BOOL) withResourcesAlternateData;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMResource *) getResource: (NSString *) authenticationToken : (EDAMGuid) guid : (BOOL) withData : (BOOL) withRecognition : (BOOL) withAttributes : (BOOL) withAlternateData;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMLazyMap *) getResourceApplicationData: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSString *) getResourceApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) setResourceApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key : (NSString *) value;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) unsetResourceApplicationDataEntry: (NSString *) authenticationToken : (EDAMGuid) guid : (NSString *) key;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int32_t) updateResource: (NSString *) authenticationToken : (EDAMResource *) resource;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSData *) getResourceData: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMResource *) getResourceByHash: (NSString *) authenticationToken : (EDAMGuid) noteGuid : (NSData *) contentHash : (BOOL) withData : (BOOL) withRecognition : (BOOL) withAlternateData;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSData *) getResourceRecognition: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (NSData *) getResourceAlternateData: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMResourceAttributes *) getResourceAttributes: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMSystemException *, EDAMNotFoundException *, TException
- (int64_t) getAccountSize: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMSystemException *, TException
- (NSArray *) getAds: (NSString *) authenticationToken : (EDAMAdParameters *) adParameters;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMAd *) getRandomAd: (NSString *) authenticationToken : (EDAMAdParameters *) adParameters;  // throws EDAMUserException *, EDAMSystemException *, TException
- (EDAMNotebook *) getPublicNotebook: (EDAMUserID) userId : (NSString *) publicUri;  // throws EDAMSystemException *, EDAMNotFoundException *, TException
- (EDAMSharedNotebook *) createSharedNotebook: (NSString *) authenticationToken : (EDAMSharedNotebook *) sharedNotebook;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (int32_t) sendMessageToSharedNotebookMembers: (NSString *) authenticationToken : (EDAMGuid) notebookGuid : (NSString *) messageText : (NSArray *) recipients;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (NSArray *) listSharedNotebooks: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (int32_t) expungeSharedNotebooks: (NSString *) authenticationToken : (NSArray *) sharedNotebookIds;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (EDAMLinkedNotebook *) createLinkedNotebook: (NSString *) authenticationToken : (EDAMLinkedNotebook *) linkedNotebook;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (int32_t) updateLinkedNotebook: (NSString *) authenticationToken : (EDAMLinkedNotebook *) linkedNotebook;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (NSArray *) listLinkedNotebooks: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (int32_t) expungeLinkedNotebook: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) authenticateToSharedNotebook: (NSString *) shareKey : (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (EDAMSharedNotebook *) getSharedNotebookByAuth: (NSString *) authenticationToken;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (void) emailNote: (NSString *) authenticationToken : (EDAMNoteEmailParameters *) parameters;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (NSString *) shareNote: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (void) stopSharingNote: (NSString *) authenticationToken : (EDAMGuid) guid;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
- (EDAMAuthenticationResult *) authenticateToSharedNote: (NSString *) guid : (NSString *) noteKey;  // throws EDAMUserException *, EDAMNotFoundException *, EDAMSystemException *, TException
@end

@interface EDAMNoteStoreClient : NSObject <EDAMNoteStore> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface EDAMNoteStoreProcessor : NSObject <TProcessor> {
  id <EDAMNoteStore> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithNoteStore: (id <EDAMNoteStore>) service;
- (id<EDAMNoteStore>) service;
@end

@interface EDAMNoteStoreConstants : NSObject {
}
@end
